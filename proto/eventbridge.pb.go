// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.1
// source: eventbridge.proto

package aws

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Services int32

const (
	Services_Lambda Services = 0
	Services_Sqs    Services = 1
	Services_Iam    Services = 2
)

// Enum value maps for Services.
var (
	Services_name = map[int32]string{
		0: "Lambda",
		1: "Sqs",
		2: "Iam",
	}
	Services_value = map[string]int32{
		"Lambda": 0,
		"Sqs":    1,
		"Iam":    2,
	}
)

func (x Services) Enum() *Services {
	p := new(Services)
	*p = x
	return p
}

func (x Services) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Services) Descriptor() protoreflect.EnumDescriptor {
	return file_eventbridge_proto_enumTypes[0].Descriptor()
}

func (Services) Type() protoreflect.EnumType {
	return &file_eventbridge_proto_enumTypes[0]
}

func (x Services) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Services.Descriptor instead.
func (Services) EnumDescriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{0}
}

type TargetType int32

const (
	TargetType_LambdaFuntion TargetType = 0
	TargetType_SqsQueue      TargetType = 1 // ...  other services or implementations;
)

// Enum value maps for TargetType.
var (
	TargetType_name = map[int32]string{
		0: "LambdaFuntion",
		1: "SqsQueue",
	}
	TargetType_value = map[string]int32{
		"LambdaFuntion": 0,
		"SqsQueue":      1,
	}
)

func (x TargetType) Enum() *TargetType {
	p := new(TargetType)
	*p = x
	return p
}

func (x TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_eventbridge_proto_enumTypes[1].Descriptor()
}

func (TargetType) Type() protoreflect.EnumType {
	return &file_eventbridge_proto_enumTypes[1]
}

func (x TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TargetType.Descriptor instead.
func (TargetType) EnumDescriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{1}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EventPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   Services `protobuf:"varint,1,opt,name=service,proto3,enum=eventbridge.Services" json:"service,omitempty"`
	EventType string   `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // Create Queue, Delete User , Create Queue.
}

func (x *EventPattern) Reset() {
	*x = EventPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPattern) ProtoMessage() {}

func (x *EventPattern) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPattern.ProtoReflect.Descriptor instead.
func (*EventPattern) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{1}
}

func (x *EventPattern) GetService() Services {
	if x != nil {
		return x.Service
	}
	return Services_Lambda
}

func (x *EventPattern) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

type ScheduleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cron string `protobuf:"bytes,1,opt,name=cron,proto3" json:"cron,omitempty"`
}

func (x *ScheduleEvent) Reset() {
	*x = ScheduleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleEvent) ProtoMessage() {}

func (x *ScheduleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleEvent.ProtoReflect.Descriptor instead.
func (*ScheduleEvent) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduleEvent) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetType TargetType `protobuf:"varint,1,opt,name=target_type,json=targetType,proto3,enum=eventbridge.TargetType" json:"target_type,omitempty"`
	TargetArn  string     `protobuf:"bytes,2,opt,name=target_arn,json=targetArn,proto3" json:"target_arn,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{3}
}

func (x *Target) GetTargetType() TargetType {
	if x != nil {
		return x.TargetType
	}
	return TargetType_LambdaFuntion
}

func (x *Target) GetTargetArn() string {
	if x != nil {
		return x.TargetArn
	}
	return ""
}

type CreateRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are assignable to Event:
	//	*CreateRuleRequest_EventPattern
	//	*CreateRuleRequest_ScheduleEvent
	Event   isCreateRuleRequest_Event `protobuf_oneof:"event"`
	Targets []*Target                 `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *CreateRuleRequest) Reset() {
	*x = CreateRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleRequest) ProtoMessage() {}

func (x *CreateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRuleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (m *CreateRuleRequest) GetEvent() isCreateRuleRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *CreateRuleRequest) GetEventPattern() *EventPattern {
	if x, ok := x.GetEvent().(*CreateRuleRequest_EventPattern); ok {
		return x.EventPattern
	}
	return nil
}

func (x *CreateRuleRequest) GetScheduleEvent() *ScheduleEvent {
	if x, ok := x.GetEvent().(*CreateRuleRequest_ScheduleEvent); ok {
		return x.ScheduleEvent
	}
	return nil
}

func (x *CreateRuleRequest) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

type isCreateRuleRequest_Event interface {
	isCreateRuleRequest_Event()
}

type CreateRuleRequest_EventPattern struct {
	EventPattern *EventPattern `protobuf:"bytes,3,opt,name=event_pattern,json=eventPattern,proto3,oneof"`
}

type CreateRuleRequest_ScheduleEvent struct {
	ScheduleEvent *ScheduleEvent `protobuf:"bytes,4,opt,name=schedule_event,json=scheduleEvent,proto3,oneof"`
}

func (*CreateRuleRequest_EventPattern) isCreateRuleRequest_Event() {}

func (*CreateRuleRequest_ScheduleEvent) isCreateRuleRequest_Event() {}

type CreateRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleArn string `protobuf:"bytes,1,opt,name=rule_arn,json=ruleArn,proto3" json:"rule_arn,omitempty"`
}

func (x *CreateRuleResponse) Reset() {
	*x = CreateRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleResponse) ProtoMessage() {}

func (x *CreateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateRuleResponse) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRuleResponse) GetRuleArn() string {
	if x != nil {
		return x.RuleArn
	}
	return ""
}

type EventBridgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EventBridgeResponse) Reset() {
	*x = EventBridgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBridgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBridgeResponse) ProtoMessage() {}

func (x *EventBridgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBridgeResponse.ProtoReflect.Descriptor instead.
func (*EventBridgeResponse) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{6}
}

func (x *EventBridgeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EventBridgeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteRuleRequest) Reset() {
	*x = DeleteRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleRequest) ProtoMessage() {}

func (x *DeleteRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChangeRuleStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ChangeRuleStateRequest) Reset() {
	*x = ChangeRuleStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRuleStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRuleStateRequest) ProtoMessage() {}

func (x *ChangeRuleStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRuleStateRequest.ProtoReflect.Descriptor instead.
func (*ChangeRuleStateRequest) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{8}
}

func (x *ChangeRuleStateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are assignable to Event:
	//	*UpdateRuleRequest_EventPattern
	//	*UpdateRuleRequest_ScheduleEvent
	Event isUpdateRuleRequest_Event `protobuf_oneof:"event"`
}

func (x *UpdateRuleRequest) Reset() {
	*x = UpdateRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleRequest) ProtoMessage() {}

func (x *UpdateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleRequest) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRuleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (m *UpdateRuleRequest) GetEvent() isUpdateRuleRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *UpdateRuleRequest) GetEventPattern() *EventPattern {
	if x, ok := x.GetEvent().(*UpdateRuleRequest_EventPattern); ok {
		return x.EventPattern
	}
	return nil
}

func (x *UpdateRuleRequest) GetScheduleEvent() *ScheduleEvent {
	if x, ok := x.GetEvent().(*UpdateRuleRequest_ScheduleEvent); ok {
		return x.ScheduleEvent
	}
	return nil
}

type isUpdateRuleRequest_Event interface {
	isUpdateRuleRequest_Event()
}

type UpdateRuleRequest_EventPattern struct {
	EventPattern *EventPattern `protobuf:"bytes,3,opt,name=event_pattern,json=eventPattern,proto3,oneof"`
}

type UpdateRuleRequest_ScheduleEvent struct {
	ScheduleEvent *ScheduleEvent `protobuf:"bytes,4,opt,name=schedule_event,json=scheduleEvent,proto3,oneof"`
}

func (*UpdateRuleRequest_EventPattern) isUpdateRuleRequest_Event() {}

func (*UpdateRuleRequest_ScheduleEvent) isUpdateRuleRequest_Event() {}

type UpdateTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleName string    `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Targets  []*Target `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *UpdateTargetRequest) Reset() {
	*x = UpdateTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbridge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTargetRequest) ProtoMessage() {}

func (x *UpdateTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbridge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTargetRequest.ProtoReflect.Descriptor instead.
func (*UpdateTargetRequest) Descriptor() ([]byte, []int) {
	return file_eventbridge_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTargetRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *UpdateTargetRequest) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

var File_eventbridge_proto protoreflect.FileDescriptor

var file_eventbridge_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x22, 0x17, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x0c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x22, 0x61,
	0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72,
	0x6e, 0x22, 0x88, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a,
	0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x48,
	0x00, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12,
	0x43, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x41, 0x72, 0x6e, 0x22, 0x47, 0x0a,
	0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x2c, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd9, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x43, 0x0a, 0x0e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x2a, 0x28, 0x0a, 0x08,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x61, 0x6d, 0x62,
	0x64, 0x61, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x71, 0x73, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x61, 0x6d, 0x10, 0x02, 0x2a, 0x2d, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x46, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x71, 0x73, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x10, 0x01, 0x32, 0xbb, 0x03, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x54, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x61, 0x77, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eventbridge_proto_rawDescOnce sync.Once
	file_eventbridge_proto_rawDescData = file_eventbridge_proto_rawDesc
)

func file_eventbridge_proto_rawDescGZIP() []byte {
	file_eventbridge_proto_rawDescOnce.Do(func() {
		file_eventbridge_proto_rawDescData = protoimpl.X.CompressGZIP(file_eventbridge_proto_rawDescData)
	})
	return file_eventbridge_proto_rawDescData
}

var file_eventbridge_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eventbridge_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_eventbridge_proto_goTypes = []interface{}{
	(Services)(0),                  // 0: eventbridge.Services
	(TargetType)(0),                // 1: eventbridge.TargetType
	(*Event)(nil),                  // 2: eventbridge.Event
	(*EventPattern)(nil),           // 3: eventbridge.EventPattern
	(*ScheduleEvent)(nil),          // 4: eventbridge.ScheduleEvent
	(*Target)(nil),                 // 5: eventbridge.Target
	(*CreateRuleRequest)(nil),      // 6: eventbridge.CreateRuleRequest
	(*CreateRuleResponse)(nil),     // 7: eventbridge.CreateRuleResponse
	(*EventBridgeResponse)(nil),    // 8: eventbridge.EventBridgeResponse
	(*DeleteRuleRequest)(nil),      // 9: eventbridge.DeleteRuleRequest
	(*ChangeRuleStateRequest)(nil), // 10: eventbridge.ChangeRuleStateRequest
	(*UpdateRuleRequest)(nil),      // 11: eventbridge.UpdateRuleRequest
	(*UpdateTargetRequest)(nil),    // 12: eventbridge.UpdateTargetRequest
}
var file_eventbridge_proto_depIdxs = []int32{
	0,  // 0: eventbridge.EventPattern.service:type_name -> eventbridge.Services
	1,  // 1: eventbridge.Target.target_type:type_name -> eventbridge.TargetType
	3,  // 2: eventbridge.CreateRuleRequest.event_pattern:type_name -> eventbridge.EventPattern
	4,  // 3: eventbridge.CreateRuleRequest.schedule_event:type_name -> eventbridge.ScheduleEvent
	5,  // 4: eventbridge.CreateRuleRequest.targets:type_name -> eventbridge.Target
	3,  // 5: eventbridge.UpdateRuleRequest.event_pattern:type_name -> eventbridge.EventPattern
	4,  // 6: eventbridge.UpdateRuleRequest.schedule_event:type_name -> eventbridge.ScheduleEvent
	5,  // 7: eventbridge.UpdateTargetRequest.targets:type_name -> eventbridge.Target
	6,  // 8: eventbridge.EventBridgeService.CreateRule:input_type -> eventbridge.CreateRuleRequest
	11, // 9: eventbridge.EventBridgeService.UpdateRule:input_type -> eventbridge.UpdateRuleRequest
	12, // 10: eventbridge.EventBridgeService.UpdateTarget:input_type -> eventbridge.UpdateTargetRequest
	9,  // 11: eventbridge.EventBridgeService.DeleteRule:input_type -> eventbridge.DeleteRuleRequest
	10, // 12: eventbridge.EventBridgeService.ChangeRuleState:input_type -> eventbridge.ChangeRuleStateRequest
	7,  // 13: eventbridge.EventBridgeService.CreateRule:output_type -> eventbridge.CreateRuleResponse
	8,  // 14: eventbridge.EventBridgeService.UpdateRule:output_type -> eventbridge.EventBridgeResponse
	8,  // 15: eventbridge.EventBridgeService.UpdateTarget:output_type -> eventbridge.EventBridgeResponse
	8,  // 16: eventbridge.EventBridgeService.DeleteRule:output_type -> eventbridge.EventBridgeResponse
	8,  // 17: eventbridge.EventBridgeService.ChangeRuleState:output_type -> eventbridge.EventBridgeResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_eventbridge_proto_init() }
func file_eventbridge_proto_init() {
	if File_eventbridge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eventbridge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBridgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRuleStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbridge_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eventbridge_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*CreateRuleRequest_EventPattern)(nil),
		(*CreateRuleRequest_ScheduleEvent)(nil),
	}
	file_eventbridge_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*UpdateRuleRequest_EventPattern)(nil),
		(*UpdateRuleRequest_ScheduleEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eventbridge_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eventbridge_proto_goTypes,
		DependencyIndexes: file_eventbridge_proto_depIdxs,
		EnumInfos:         file_eventbridge_proto_enumTypes,
		MessageInfos:      file_eventbridge_proto_msgTypes,
	}.Build()
	File_eventbridge_proto = out.File
	file_eventbridge_proto_rawDesc = nil
	file_eventbridge_proto_goTypes = nil
	file_eventbridge_proto_depIdxs = nil
}
