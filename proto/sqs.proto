syntax = "proto3";
package sqs;


option go_package = "./;aws";



message Message {
    string Id = 1;
    string message = 2;
    Queue queue = 3;
}

message Queue { 
    string name = 2;
    string arn  = 3;
}

enum Time { 
    SECOND = 0;
    MINUTE = 1;
    HOUR = 2;
}

message ConfigurationQueue {
	int32 VisibilityTimeout     =  1;
	Time VisibilityTime        =  2;
	int32 MessageRetention      =  3;
	Time MessageRetentionTime  =  4;
	int32 DeliveryDelay         =  5;
	Time DeliveryDelayTime     =  6;
}



message CreateQueueRequest { 
    string name = 1;
    ConfigurationQueue conf = 2;
}

message CreateQueueResponse { 
    Queue queue = 1;
}

message SendMessageRequest {
    string queue_name = 1;
    string message = 2;
}

message SendMessageResponse {
    Message message = 1;
}   

message ReceiveMessageRequest {
    string queue_name = 1;
}

message ReceiveMessageResponse {
    Message message = 1;
}

service SQSService {
    rpc CreateQueue(CreateQueueRequest) returns (CreateQueueResponse){
        // option (google.api.http) = {
        //     post: "/v1/queue"
        //     body: "*"
        // };
    };
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse){
        // option (google.api.http) = {
        //     post: "/v1/message"
        //     body: "*"
        // };
    };
    rpc ReceiveMessage(ReceiveMessageRequest) returns (stream ReceiveMessageResponse){
        // option (google.api.http) = {
        //     get: "/v1/message"
        // };
    };
}