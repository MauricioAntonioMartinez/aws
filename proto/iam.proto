syntax = "proto3";

package iam;

option go_package = "./;aws";



service IAMService { 
    rpc CreatePolicy(CreatePolicyRequest) returns (CreatePolicyResponse);
    rpc GetPolicy(GetPolicyRequest) returns (GetPolicyResponse);
    rpc UpdatePolicy(UpdatePolicyRequest) returns (UpdatePolicyResponse);
    rpc DeletePolicy(DeletePolicyRequest) returns (DeletePolicyResponse);

    rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse);
    rpc GetRole(GetRoleRequest) returns (GetRoleResponse);
    rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse);
    rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse);

    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);

    rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse);
    rpc GetGroup(GetGroupRequest) returns (GetGroupResponse);
    rpc UpdateGroup(UpdateGroupRequest) returns (UpdateGroupResponse);
    rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupResponse);

    rpc CreateAccessKeys(CreateAccessKeysRequest) returns (CreateAccessKeysResponse);
    rpc GetAccessKeys(GetAccessKeysRequest) returns (GetAccessKeysResponse);
    rpc DeleteAccessKeys(DeleteAccessKeysRequest) returns (DeleteAccessKeysResponse);

    rpc Login(LoginRequest) returns (LoginResponse);
    rpc SignUp(SignUpRequest) returns (SignUpResponse);
}

message Policy {
    uint32 id = 1;
    string name = 2;
    string manifest = 3;
    string description = 4;
}

message Role {
    uint32 id = 1;
    string name = 2;
    string description = 3;
    repeated Policy policies = 4;
}

message User {
    uint32 id = 1;
    string name = 2;
    string description = 3;
    repeated Policy policies = 4;
    string access_keys = 5;
}

message Group {
    uint32 id = 1;
    string name = 2;
    string description = 3;
    repeated User users = 4;
}

message AccessKeys {
    uint32 id = 1;
}


message LoginRequest { 
    bool root_user = 1;
    string account_id = 2;
    string email = 3;
    string name = 4;
    string password = 5;
}

message SignUpRequest { 
    string email = 1;
    string password = 2;    
    string confirm_password = 3;
}

message SignUpResponse { 
    bool succeed = 1;
}

message LoginResponse { 
    string token = 1;
}


message CreatePolicyRequest {
    Policy policy = 1;
}

message CreatePolicyResponse {
    Policy created = 1;
}

message GetPolicyRequest {
    uint32 id = 1;
}

message GetPolicyResponse {
    Policy policy = 1;
}

message UpdatePolicyRequest {
    Policy updated = 1;
}

message UpdatePolicyResponse {
    Policy result = 1;
}

message DeletePolicyRequest {
    uint32 id = 1;
}

message DeletePolicyResponse {

}

message CreateRoleRequest {
    Role role = 1;
}

message CreateRoleResponse {
    Role created = 1;
}

message GetRoleRequest {
    uint32 id = 1;
}

message GetRoleResponse {
    Role role = 1;
}

message UpdateRoleRequest {
    Role updated = 1;
}

message UpdateRoleResponse {
    Role result = 1;
}

message DeleteRoleRequest {
    uint32 id = 1;
}

message DeleteRoleResponse {}

message CreateUserRequest {
    User user = 1;
}

message CreateUserResponse {
    User created = 1;
}

message GetUserRequest {
    uint32 id = 1;
}

message GetUserResponse {
    User user = 1;
}

message UpdateUserRequest {
    User updated = 1;
}

message UpdateUserResponse {
    User result = 1;
}

message DeleteUserRequest {
    uint32 id = 1;
}

message DeleteUserResponse {

}

message CreateGroupRequest {
    Group group = 1;
}

message CreateGroupResponse {
    Group created = 1;
}

message GetGroupRequest {
    uint32 id = 1;
}

message GetGroupResponse {
    Group group = 1;
}

message UpdateGroupRequest {
    Group updated = 1;
}

message UpdateGroupResponse {
    Group result = 1;
}

message DeleteGroupRequest {
    uint32 id = 1;
}

message DeleteGroupResponse {

}

message CreateAccessKeysRequest {
    AccessKeys accessKeys = 1;
}

message CreateAccessKeysResponse {
    AccessKeys created = 1;
}

message GetAccessKeysRequest {
    uint32 id = 1;
}

message GetAccessKeysResponse {
    AccessKeys accessKeys = 1;
}

message UpdateAccessKeysRequest {
    AccessKeys updated = 1;
}

message UpdateAccessKeysResponse {
    AccessKeys result = 1;
}

message DeleteAccessKeysRequest {
    uint32 id = 1;
}

message DeleteAccessKeysResponse {

}